##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
client_max_body_size 0;
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name bitbucket api.bitbucket;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;
		rewrite ^(.*) https://$server_name$1 permanent;
	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
server {

                listen 443;
               server_name     bitbucket ;

                ssl                     on;
            ssl_certificate             /etc/ssl/certs/nginx-selfsigned.crt;
            ssl_certificate_key         /etc/ssl/private/nginx-selfsigned.key;
            ssl_session_timeout         5m;
            ssl_protocols                       TLSv1 TLSv1.1 TLSv1.2;
            ssl_ciphers                         HIGH:!aNULL:!MD5;
            ssl_prefer_server_ciphers   on;

                # Optional optimisation - please refer to
                # http://nginx.org/en/docs/http/configuring_https_servers.html
                # ssl_session_cache   shared:SSL:10m;
            location / {
			if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';

        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

        add_header 'Access-Control-Max-Age' 86400;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204; break;
     }

     if ($request_method = 'POST') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
     }
     if ($request_method = 'GET') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
     }
                        proxy_pass              http://localhost:7990;
			proxy_set_header Host $http_host;
                        proxy_set_header        X-Forwarded-Host $host;
                        proxy_set_header        X-Forwarded-Server $host;
                        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header    X-Real-IP $remote_addr;
                        proxy_redirect          off;
        }

}
server {

                listen 443;
               server_name     api.bitbucket ;

                ssl                     on;
            ssl_certificate             /etc/ssl/certs/nginx-selfsigned.crt;
            ssl_certificate_key         /etc/ssl/private/nginx-selfsigned.key;
            ssl_session_timeout         5m;
            ssl_protocols                       TLSv1 TLSv1.1 TLSv1.2;
            ssl_ciphers                         HIGH:!aNULL:!MD5;
            ssl_prefer_server_ciphers   on;

                # Optional optimisation - please refer to
                # http://nginx.org/en/docs/http/configuring_https_servers.html
                # ssl_session_cache   shared:SSL:10m;
            location /2.0/user {
			if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';

        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

        add_header 'Access-Control-Max-Age' 86400;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204; break;
     }

     if ($request_method = 'POST') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
     }
     if ($request_method = 'GET') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
     }
                        proxy_pass              http://localhost:7990/rest/api/1.0/admin/users ;
                        proxy_set_header Host $http_host;
                        proxy_set_header        X-Forwarded-Host $host;
                        proxy_set_header        X-Forwarded-Server $host;
                        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header    X-Real-IP $remote_addr;
                        proxy_redirect          off;
			proxy_set_header Authorization "Basic ZG1zYWRtaW46QkJEQy1Nems0TkRreU56WTJNVGN5T2tyUjFsZm9JMXlWSWwvYWIzMkRmc3JNT0M3cQ=="; 
			proxy_pass_header Authorization;
        }
        }


server {

                listen 8081;
               server_name     localhost ;
	       location / {

                # Optional optimisation - please refer to
                # http://nginx.org/en/docs/http/configuring_https_servers.html
                # ssl_session_cache   shared:SSL:10m;
 
                       proxy_pass              http://localhost:8082/ ;
                        proxy_set_header Host $http_host;
                        proxy_set_header        X-Forwarded-Host $host;
                        proxy_set_header        X-Forwarded-Server $host;
                        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header    X-Real-IP $remote_addr;
                        proxy_redirect          off;
                        proxy_set_header Authorization "Basic ZG1zYWRtaW46QkJEQy1Nems0TkRreU56WTJNVGN5T2tyUjFsZm9JMXlWSWwvYWIzMkRmc3JNT0M3cQ==";
                        proxy_pass_header Authorization;
        }
}
